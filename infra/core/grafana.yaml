apiVersion: v1
kind: Service
metadata:
  name: loki
  labels:
    app: loki
spec:
  type: ClusterIP
  ports:
  - port: 3100
    targetPort: 3100
  selector:
    app: loki
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  labels:
    app: loki
spec:
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      volumes:
      - name: loki-data
        persistentVolumeClaim:
          claimName: loki-data
      containers:
      - name: loki
        image: grafana/loki
        ports:
        - containerPort: 3100
        volumeMounts:
        - mountPath: /loki
          name: loki-data
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 3000
  selector:
    app: grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      # volumes:
        # FMI, graphana data are stored in /var/lib/graphana
        # - name: grafana-config
        #   configMap:
        #     name: grafana-config
      containers:
      - name: grafana
        image: grafana/grafana:7.4.2
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
        # volumeMounts:
        #   - name: grafana-config
        #     mountPath: /etc/grafana/grafana.ini
        #     subPath: grafana.ini

