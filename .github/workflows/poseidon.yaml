name: poseidon

on:
  push:
    paths:
      - "poseidon/**"

defaults:
  run:
    shell: bash
    working-directory: poseidon

jobs:
  validation:
    name: lint
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install node
        uses: actions/setup-node@v2
      - name: install dependencies
        run: npm install
      - name: run eslint
        run: npx eslint src --max-warnings 0

  release:
    name: release new version
    runs-on: ubuntu-latest
    needs: validation
    if: github.ref == 'refs/heads/master'

    env:
      GITHUB_TOKEN: ${{ secrets.CI_USER_TOKEN }}

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: 'master'
      - name: install node
        uses: actions/setup-node@v2
      - name: install dependencies
        run: sudo npm install -g semantic-release @semantic-release/git @semantic-release/npm
      - name: git pull
        run: git pull
      - name: run semantic release
        run: semantic-release

  build:
    name: build docker image
    runs-on: ubuntu-latest
    needs: release
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 'master'
      - name: install node
        uses: actions/setup-node@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: install dependencies
        run: npm install
      - name: build app
        run: npm run build
      - name: git latest tag
        run: |
          git fetch --tags --prune --unshallow
          tag=$(git describe --tags --abbrev=0 --match 'poseidon-*')
          version=$(echo $tag | cut -d'-' -f2 | cut -d'v' -f2)
          echo "image_version=${version}" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: poseidon
          push: true
          build-args: |
            image_version=${{ env.image_version }}
          tags: |
            yomain/poseidon:${{ env.image_version }}
            yomain/poseidon:latest
