version: "3.7"

services:
  akingbee:
    image: yomain/akingbee:prod
    container_name: akingbee
    expose:
      - 8080
    volumes:
      - .env:/app/.env
      - ./log:/app/log
    environment:
      - REDIS_HOST=redis
      - SERVICE_NAME=webapp
      - IDENTIFIER=AKB
      - ENV=SIMU
    env_file: .env
    command: uwsgi --ini ./uwsgi.ini
    restart: "always"
    depends_on:
      - redis
      - messaging_bee
    networks:
      - akb-nw

  messaging_bee:
    image: yomain/akingbee:prod
    user: 1000:1000
    container_name: messaging_bee
    volumes:
      - .env:/app/.env
      - ./log:/app/log
    environment:
      - REDIS_HOST=redis
      - SERVICE_NAME=messaging
      - IDENTIFIER=AKB
    command: python listener.py
    restart: "always"
    env_file: .env
    depends_on:
      - redis
    networks:
      - akb-nw

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: "always"
    command: ["/etc/nginx/start.sh"]
    environment:
      TZ: Europe/Paris
      NGINX_AUTH_USERNAME: ${NGINX_AUTH_USERNAME}
      NGINX_AUTH_PWD: ${NGINX_AUTH_PWD}
    volumes:
      - /etc/letsencrypt:/certs
      - ./infra/conf/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./infra/conf/nginx/start.sh:/etc/nginx/start.sh
    ports:
      - 80:80
      - 443:443
    depends_on:
      - akingbee
    networks:
      - akb-nw

  db:
    image: postgres:10-alpine
    container_name: db
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: akb_dev
      POSTGRES_USER: akingbee
      POSTGRES_PASSWORD: "123"
      POSTGRES_HOST_AUTH_METHOD: "trust"
    networks:
      - akb-nw


  redis:
    image: redis:rc-alpine
    container_name: redis
    expose:
      - 6379
    restart: always
    networks:
      - akb-nw

networks:
    akb-nw:

