apiVersion: v1
kind: Service 
metadata:
  name: elastic
  labels:
    app: elastic
spec:
  ports:
  - port: 9200
    targetPort: 9200
  selector:
    app: elastic
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elastic-cache
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elastic
  labels:
    app: elastic
spec:
  selector:
    matchLabels:
      app: elastic
  template:
    metadata:
      labels:
        app: elastic
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-type
                operator: In
                values:
                - preemptible
      securityContext:
        fsGroup: 1000
      volumes:
      - name: elastic-cache
        persistentVolumeClaim:
          claimName: elastic-cache
      containers:
      - name: elastic
        image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
        # resources:
        #   limits:
        #     memory: 2Gi
        env:
          - name: node.name
            value: elastic
          - name: discovery.type
            value: single-node
          - name: bootstrap.memory_lock
            value: 'true'
        volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: elastic-cache
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  labels:
    app: kibana
spec:
  ports:
  - port: 5601
    targetPort: 5601
  selector:
    app: kibana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  labels:
    app: kibana
spec:
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-type
                operator: In
                values:
                - preemptible
      volumes:
        - name: kibana-config
          configMap:
            name: kibana-config
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:7.6.1
        volumeMounts:
          - name: kibana-config
            mountPath: /usr/share/kibana/config/kibana.yml
            subPath: kibana.yml
        env:
          - name: ELASTICSEARCH_URL
            value: http://elastic:9200
          - name: ELASTICSEARCH_HOSTS
            value: http://elastic:9200

